#!/usr/bin/env bash

# This script is used to create a new problem directory
# Usage: ./new <problem_id> <problem_name>
# Example: ./new 1083 "Missing Number"

# Check if the problem id is valid
if [[ ! $1 =~ ^[0-9]+$ ]]; then
    echo "Invalid problem id: $1"
    exit 1
fi

# Check if the problem name is valid
if [[ ! $2 =~ ^[a-z0-9-]+$ ]]; then
    echo "Invalid problem name: $2"
    exit 1
fi

# ensure no more than 2 arguments are passed
if [[ $# -gt 2 ]]; then
    echo "Too many arguments"
    exit 1
fi

# Get the directory of this script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
# Get Folder name
BASEDIR="$(basename $DIR)"

# Create the directory `problem_id_problem-name`
problem_dir=$1
mkdir $DIR/$problem_dir

# Convert the problem name to PascalCase
problem_name=$(echo $2 | sed -r 's/(-|^)([a-z])/\U\2/g')

# Copy all template files to the problem directory
cp $DIR/template/* $DIR/$problem_dir

# replace $ProblemNameTest with <problem_name>Test
test_name=$problem_name"Test"
sed -i "s/\$ProblemNameTest/$test_name/g" $DIR/$problem_dir/tests.cpp
sed -i "s/\$ProblemName/$problem_name/g" $DIR/$problem_dir/tests.cpp
# replace $ProblemName with <problem_name>
sed -i "s/\$ProblemName/$problem_name/g" $DIR/$problem_dir/solution.hpp

echo "Created new problem directory: $problem_dir"
echo "Please modify the following files:"
echo "  $DIR/$problem_dir/solution.cpp"
echo "  $DIR/$problem_dir/tests.cpp"
echo "Test can be run with:"
echo "  $ ibazel test --test_output=all //$BASEDIR:tests --test_filter='$test_name.*'"